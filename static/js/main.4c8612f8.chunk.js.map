{"version":3,"sources":["sound/beep.mp3","constants/index.js","reducers/index.js","components/timer.js","components/upperBody.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","START","PAUSE","initialState","type","Constants","min","sec","sLength","bLength","timerState","input","timerReducer","timer","state","action","clearInterval","Timer","props","isBreak","start","bind","pause","stop","tick","intMin","this","data","intSec","breakv","sessionv","Audio","sound","play","setState","timerStates","setInterval","minFormat","toString","secFormat","id","className","length","style","marginRight","marginLeft","onClick","React","Component","connect","dispatch","mess","ClockBody","sessionIncrement","sessionDecrement","breakIncrement","breakDecrement","stopCounter","myvar","sessionL","parseInt","temp","breakL","onMouseDown","onMouseUp","App","href","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c8612f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.006ba76b.mp3\";","export const START = \"START\";\r\nexport const PAUSE = \"PAUSE\";\r\nexport const RESET = \"RESET\";\r\nexport const SESSIONINCREMENT = \"SESSIONINCREMENT\";\r\nexport const SESSIONDECREMENT = \"SESSIONDECREMENT\";\r\nexport const BREAKINCREMENT = \"BREAKINCREMENT\";\r\nexport const BREAKDECREMENT = \"BREAKDECREMENT\";\r\nexport const UPDATE = \"UPDATE\";","import * as Constants from '../constants/index';\r\n\r\nconst initialState = {\r\n  type: Constants.PAUSE,\r\n  min: 25,\r\n  sec: 0,\r\n  sLength: 25,\r\n  bLength: 5\r\n};\r\n\r\nexport const timerState = (input) => {\r\n  if (input === Constants.START) {\r\n    return {\r\n      type: Constants.START\r\n    };\r\n  } else if (input === Constants.PAUSE) {\r\n    return {\r\n      type: Constants.PAUSE\r\n    };\r\n  } else if (input === Constants.RESET) {\r\n    return {\r\n      type: Constants.RESET\r\n    };\r\n  } else if (input.type === Constants.SESSIONINCREMENT) {\r\n    return {\r\n      type: Constants.SESSIONINCREMENT,\r\n      min: input.min,\r\n      bLength: input.bLength,\r\n      sLength: input.sLength\r\n    }\r\n  } else if (input.type === Constants.SESSIONDECREMENT) {\r\n    return {\r\n      type: Constants.SESSIONDECREMENT,\r\n      min: input.min,\r\n      bLength: input.bLength,\r\n      sLength: input.sLength\r\n    }\r\n  } else if (input.type === Constants.BREAKINCREMENT) {\r\n    return {\r\n      type: Constants.BREAKINCREMENT,\r\n      bLength: input.bLength,\r\n      sLength: input.sLength\r\n    }\r\n  } else if (input.type === Constants.BREAKDECREMENT) {\r\n    return {\r\n      type: Constants.BREAKDECREMENT,\r\n      bLength: input.bLength,\r\n      sLength: input.sLength\r\n    }\r\n  } else if (input.type === Constants.UPDATE) {\r\n    return {\r\n      type: Constants.UPDATE,\r\n      min: input.min,\r\n      sec: input.sec\r\n    }\r\n  }\r\n}\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n  var timer;\r\n  switch (action.type) {\r\n    case Constants.START:\r\n      return {\r\n        type: Constants.START,\r\n        min: state.min,\r\n        sec: state.sec,\r\n        sLength: state.sLength,\r\n        bLength: state.bLength\r\n      }\r\n    case Constants.PAUSE:\r\n      clearInterval(timer);\r\n      return {\r\n        type: Constants.PAUSE,\r\n        min: state.min,\r\n        sec: state.sec,\r\n        sLength: state.sLength,\r\n        bLength: state.bLength\r\n      };\r\n    case Constants.RESET:\r\n      return {\r\n        type: Constants.RESET,\r\n        min: 25,\r\n        sec: 0,\r\n        sLength: 25,\r\n        bLength: 5\r\n      };\r\n    case Constants.SESSIONINCREMENT:\r\n    case Constants.SESSIONDECREMENT:\r\n      return {\r\n        type: Constants.PAUSE,\r\n        min: action.min,\r\n        sec: 0,\r\n        sLength: action.sLength,\r\n        bLength: action.bLength\r\n      };\r\n    case Constants.BREAKINCREMENT:\r\n    case Constants.BREAKDECREMENT:\r\n      return {\r\n        type: Constants.PAUSE,\r\n        min: state.min,\r\n        sec: state.sec,\r\n        sLength: action.sLength,\r\n        bLength: action.bLength\r\n      };\r\n    case Constants.UPDATE:\r\n      return {\r\n        type: Constants.START,\r\n        min: action.min,\r\n        sec: action.sec,\r\n        sLength: state.sLength,\r\n        bLength: state.bLength\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;","import React from 'react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux';\r\nimport sound from '../sound/beep.mp3';\r\nimport { timerState } from '../reducers/index';\r\nimport * as Constants from '../constants/index';\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBreak: false,\r\n      timer: null\r\n    };\r\n    this.start = this.start.bind(this);\r\n    this.pause = this.pause.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.tick = this.tick.bind(this);\r\n  }\r\n\r\n  tick() {\r\n    var intMin = this.props.data.min;\r\n    var intSec = this.props.data.sec;\r\n    var breakv = this.props.data.bLength;\r\n    var sessionv = this.props.data.sLength;\r\n\r\n    if (intMin === 0 && intSec === 0 && !this.state.isBreak) {\r\n      new Audio(sound).play();\r\n      this.setState({\r\n        isBreak: true\r\n      })\r\n\r\n      this.props.timerStates({\r\n        type: Constants.UPDATE,\r\n        min: breakv,\r\n        sec: 0\r\n      });\r\n      return;\r\n    } else if (intMin === 0 && intSec === 0 && this.state.isBreak) {\r\n      new Audio(sound).play();\r\n      this.setState({\r\n        isBreak: false\r\n      })\r\n\r\n      this.props.timerStates({\r\n        type: Constants.UPDATE,\r\n        min: sessionv,\r\n        sec: 0\r\n      });\r\n      return;\r\n    }\r\n    else if (intSec === 0) {\r\n      intMin--;\r\n      intSec = 59;\r\n    } else {\r\n      intSec--;\r\n    }\r\n\r\n    this.props.timerStates({\r\n      type: Constants.UPDATE,\r\n      min: intMin,\r\n      sec: intSec\r\n    });\r\n  }\r\n\r\n  start() {\r\n    if (this.state.timer === null) {\r\n      this.props.timerStates(Constants.START);\r\n      let timer = setInterval(this.tick, 1000);\r\n      this.setState({\r\n        timer: timer\r\n      })\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    this.props.timerStates(Constants.PAUSE);\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      timer: null\r\n    })\r\n  }\r\n\r\n  stop() {\r\n    this.props.timerStates(Constants.RESET);\r\n    clearInterval(this.state.timer);\r\n    this.setState({\r\n      timer: null,\r\n      isBreak: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var minFormat = this.props.data.min.toString();\r\n    var secFormat = this.props.data.sec.toString();\r\n    return (\r\n      <div id=\"timerBody\">\r\n        <h3 id=\"timer-label\">{(this.state.isBreak) ? \"Break\" : \"Session\"}</h3>\r\n        <div id=\"timer-container\" className={(this.state.isBreak) ? \"bg-color\" : \"bg-color1\"}>\r\n          <h1 className=\"timer\" id=\"mins\">{(minFormat.length === 1) ? \"0\" + minFormat : minFormat}</h1>\r\n        <h1 className=\"timer\" style={{ marginRight: \"5px\", marginLeft: \"5px\" }}>:</h1>\r\n        <h1 className=\"timer\" id=\"sec\">{(secFormat.length === 1) ? \"0\" + secFormat : secFormat}</h1>\r\n      </div>\r\n      <div id=\"button-container\">\r\n        <button id=\"start\" onClick={this.start}>Start</button>\r\n        <button id=\"pause\" onClick={this.pause}>Pause</button>\r\n        <button id=\"reset\" onClick={this.stop}>Reset</button>\r\n      </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  timerStates: (mess) => {\r\n    dispatch(timerState(mess))\r\n  }\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { data: state }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","import React from 'react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux';\r\nimport { timerState } from '../reducers/index';\r\nimport * as Constants from '../constants/index';\r\n\r\nclass ClockBody extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sessionIncrement = this.sessionIncrement.bind(this);\r\n    this.sessionDecrement = this.sessionDecrement.bind(this);\r\n    this.breakIncrement = this.breakIncrement.bind(this);\r\n    this.breakDecrement = this.breakDecrement.bind(this);\r\n    this.stopCounter = this.stopCounter.bind(this);\r\n    this.myvar = 0;\r\n  }\r\n\r\n  sessionIncrement() {\r\n    this.myvar = setInterval(() => {\r\n      if (this.props.data.type !== Constants.START) {\r\n        var sessionL = parseInt(this.props.data.sLength, 10);\r\n\r\n        if (sessionL !== 60) {\r\n          sessionL = sessionL + 1;\r\n\r\n          this.props.timerStates({\r\n            type: Constants.SESSIONINCREMENT,\r\n            min: sessionL,\r\n            bLength: this.props.data.bLength,\r\n            sLength: sessionL\r\n          });\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  sessionDecrement() {\r\n    this.myvar = setInterval(() => {\r\n      if (this.props.data.type !== Constants.START) {\r\n        var temp = parseInt(this.props.data.sLength, 10);\r\n        if (temp !== 1) {\r\n          temp = temp - 1;\r\n\r\n          this.props.timerStates({\r\n            type: Constants.SESSIONDECREMENT,\r\n            min: temp,\r\n            bLength: this.props.data.bLength,\r\n            sLength: temp\r\n          });\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  breakIncrement() {\r\n    this.myvar = setInterval(() => {\r\n      if (this.props.data.type !== Constants.START) {\r\n        var breakL = parseInt(this.props.data.bLength, 10);\r\n\r\n        if (breakL !== 60) {\r\n          breakL = breakL + 1;\r\n\r\n          this.props.timerStates({\r\n            type: Constants.BREAKINCREMENT,\r\n            bLength: breakL,\r\n            sLength: this.props.data.sLength\r\n          });\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  breakDecrement() {\r\n    this.myvar = setInterval(() => {\r\n      if (this.props.data.type !== Constants.START) {\r\n        var temp = parseInt(this.props.data.bLength, 10);\r\n        if (temp !== 1) {\r\n          temp = temp - 1;\r\n\r\n          this.props.timerStates({\r\n            type: Constants.BREAKDECREMENT,\r\n            bLength: temp,\r\n            sLength: this.props.data.sLength\r\n          });\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  stopCounter() {\r\n    clearInterval(this.myvar);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"upperBody\">\r\n        <h1 id=\"title\">Pomodoro Clock</h1>\r\n\r\n        <p id=\"break-label\">Break Length</p>\r\n        <button id=\"break-decrement\" onMouseDown={this.breakDecrement} onMouseUp={this.stopCounter}>-</button>\r\n        <p id=\"break-length\">{this.props.data.bLength}</p>\r\n        <button id=\"break-increment\" onMouseDown={this.breakIncrement} onMouseUp={this.stopCounter}>+</button><br />\r\n\r\n        <p id=\"session-label\">Session Length</p>\r\n        <button id=\"session-decrement\" onMouseDown={this.sessionDecrement} onMouseUp={this.stopCounter}>-</button>\r\n        <p id=\"session-length\">{this.props.data.sLength}</p>\r\n        <button id=\"session-increment\" onMouseDown={this.sessionIncrement} onMouseUp={this.stopCounter}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  timerStates: (mess) => {\r\n    dispatch(timerState(mess))\r\n  }\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { data: state }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClockBody);","import React from 'react';\nimport './App.css';\nimport Timer from './components/timer'\nimport UpperBody from './components/upperBody';\n\n\nfunction App() {\n  return (\n    <div>\n      <div id=\"main-container\">\n        <UpperBody />\n        <Timer />\n      </div>\n      <div id=\"author\">\n        <p>Designed and Coded by</p> <br />\n        <a href=\"https://github.com/UsmanFayyaz/pomodoro-clock\">Usman Fayyaz</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport timerReducer from './reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nlet store = createStore(timerReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}